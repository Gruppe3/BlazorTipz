@page "/"
@using System.Diagnostics
@using BlazorTipz.Components
@inject ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject AuthenticationComponent _auth


    <PageTitle>Index</PageTitle>
<AuthorizeView>
    <Authorized>
<h1 class="center">Hello @context.User.Claims.SingleOrDefault(x => x.Type.Equals("given_name")).Value @context.User.Claims.SingleOrDefault(x => x.Type.Equals("family_name")).Value</h1>
    <p class="d-flex justify-content-center">Welcome to your new app.</p>
    
        <p class="d-flex justify-content-center">UserId: @context.User.Identity.Name</p>

            <div class="center">
                <button class="btn btn-primary" @onclick="Logout"> Logout </button>
            </div>
        <div class="center">
            <button class="btn btn-primary" @onclick="Settings"> Settings </button>
        </div>
        </Authorized>
        <NotAuthorized>
            <div class="center">
                <button class="btn btn-primary" @onclick="NavigateToLogin"> Login </button>
            </div>
        </NotAuthorized>
    </AuthorizeView>



@code {
    private void NavigateToLogin() { NavigationManager.NavigateTo("login"); }
    private void Settings() { NavigationManager.NavigateTo("userSettings"); }
    public async Task Logout()
    {
        await _localStorage.RemoveItemAsync("token");
        NavigationManager.NavigateTo("/login", true);
    }
}

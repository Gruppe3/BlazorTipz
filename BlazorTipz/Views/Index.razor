<!--Namespace-->
@page "/"

<!--Accesses classes defined here-->
@using BlazorTipz.ViewModels.User
@using BlazorTipz.ViewModels.Suggestion
@using Radzen

<!--Injects from program-->
@inject ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject IUserManager _userManager
@inject ISuggestionManager _suggestionManager
@inject DialogService DialogService

<link rel="stylesheet" href="css/Navbar.css" />

<PageTitle>Home</PageTitle>
<!--Authorized view, not visable for someone not logged in-->
<AuthorizeView>
    <Authorized>
        <h1 class="center">Dashboard</h1>
        <p class="d-flex justify-content-center">Welcome to Tipz!</p>
        
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <RadzenCard Class="suggColor">
                        @if (isLoaded == true)
                        {
                            <h1 class="d-flex justify-content-center">Your suggestions</h1>
                            <p class="d-flex justify-content-center">Listeted from old to new</p>
                            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@UserSug" TItem="SuggViewmodel" PageSize="3"
                                        PagerHorizontalAlign="HorizontalAlign.Center" PagerPosition="PagerPosition.Top">
                                <Template Context="suggestions">
                                    <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                                        <a href="javascript:void(0);" class="nav__add" style="text-decoration-line: none;" @onclick="@(() =>
                                            ShowCloseableFromOverlayDialog(suggestions.Title, suggestions.OwnerTeam, suggestions.Description, suggestions.Status.ToString()))">
                                            <div class="container">
                                                <div class="row">
                                                    <div class="col-lg p-3 product-title">
                                                        <h2>@(suggestions.Title)</h2>
                                                        <p>Added: @(suggestions.StartDate)</p>
                                                        <p>Last Edited; @(suggestions.UpdatedDate)</p>

                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </RadzenCard>
                                </Template>
                            </RadzenDataList>
                        }
                        else
                        {
                            <div class="center">
                                <div class="spinner"></div>
                            </div>
                        }
                    </RadzenCard>
                </div>
            </div>
        </div>
        <div class="bigboi"></div>
    </Authorized>
    <NotAuthorized>
        <h1 class="center">Redirecting..</h1>
    </NotAuthorized>
</AuthorizeView>

<style>

</style>

@code {

    async Task ShowCloseableFromOverlayDialog(string title, string ownerTeam, string description, string status)
    {
        await DialogService.OpenAsync($"Suggestion", ds =>
    @<div>
        <h3>
            @title
            <RadzenBadge BadgeStyle="BadgeStyle.Warning" Shade="Shade.Lighter" IsPill="@true" Text="@status" Class="ml-2" />
        </h3>
        <p>@description</p>
    </div>, new DialogOptions() { CloseDialogOnOverlayClick = true });
    }
}
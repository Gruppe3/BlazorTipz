<!--Namespace-->
@page "/"

<!--Accesses classes defined here-->
@using BlazorTipz.ViewModels.User

<!--Injects from program-->
@inject ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject IUserManager _userManager



<PageTitle>Home</PageTitle>
<!--Authorized view, not visable for someone not logged in-->
<AuthorizeView>
    <Authorized>
        <h1 class="center">Hello!</h1>
        <p class="d-flex justify-content-center">Welcome to Tipz!</p>


    </Authorized>
    <NotAuthorized>
        <h1 class="center">Redirecting..</h1>
    </NotAuthorized>
</AuthorizeView>



@code {
    UserViewmodel currentUser = new UserViewmodel();

    //Everytime page loads this runs
    protected override async Task OnInitializedAsync()
    {

        //Gets token
        string token = await _localStorage.GetItemAsync<string>("token");

        //If you do not have a token it redirects you to /login
        if (token == null || token == "")
        {
            NavigationManager.NavigateTo("/login", true);
        }
        else
        //Returns UserViewmodel or an error
        {
            (UserViewmodel user, string err) = await _userManager.getCurrentUser(token);

            if (err != null)
            {
                NavigationManager.NavigateTo("/login", true);
            }
            else if (user == null)
            {
                NavigationManager.NavigateTo("/login", true);
            }
            //Sets currentUser to user
            currentUser = user;
        }
    }
    private void NavigateToLogin() { NavigationManager.NavigateTo("login"); }

}
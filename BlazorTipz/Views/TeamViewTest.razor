<!--Namespace-->
@page "/teamViewTest"

<!--Accesses classes defined here-->
@using Microsoft.AspNetCore.Components;
@using BlazorTipz.Data;
@using BlazorTipz.ViewModels
@using BlazorTipz.ViewModels.Team
@using BlazorTipz.ViewModels.User
@using BlazorTipz.ViewModels.Suggestion
@using Microsoft.AspNetCore.Mvc
@using Radzen

<!--Injects from program-->
@inject ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject IUserManager _userManager
@inject ITeamManager _teamManager
@inject ISuggestionManager _suggestionManager
@inject DialogService DialogService

<AuthorizeView>
	<Authorized>
		<h1>TestSide </h1>
		<h3>Komponent for å demonstrere visning av fler-team relasjon</h3>
		<div>
		<button class="btn btn-primary" @onclick="Refresh">Refresh</button>
		<button class="btn btn-primary" @onclick="ShowAll">Show all</button>
		<div>@err</div>
			<table>
				<tr>
					<th>Ansatt Navn</th>
					<th>Team Navn</th>
					<th>Rolle i team</th>
				</tr>
				@foreach (TeamMemberViewmodel i in TeamMemView)
				{
					<tr>
						<td title="Ansatt Id: @i.AnsattId">@i.AnsattNavn</td>
						<td title="Team Id: @i.TeamId">@i.TeamNavn</td>
						<td>@i.TeamRolle</td>
					</tr>
				}
			</table>
		</div>
	</Authorized>
	<NotAuthorized>
		<h1>Ikke mye å se her uten å være logget inn</h1>
	</NotAuthorized>
</AuthorizeView>

@code {
	//List of TeamMemberViewmodels
	List<TeamMemberViewmodel> TeamMemView = new List<TeamMemberViewmodel>();
	UserViewmodel? User = null;
	string? err = "No error";

	//OnInitializedAsync
	protected override async Task OnInitializedAsync()
	{

	}
	public async Task Refresh() 
	{ 
		err = string.Empty;
		User = _userManager.CurrentUser;
		if (User != null)
		{
			string EmpId = User.employmentId;
			(TeamMemView, err) = await _teamManager.GetTeamMembersByUser(EmpId);
		}
	}
	public async Task ShowAll()
	{
		err = string.Empty;
		(TeamMemView, err) = await _teamManager.GetAllTeamMembers();
	}
}
<!--Namespace-->
@page "/teamView"

<!--Accesses classes defined here-->
@using Microsoft.AspNetCore.Components
@using BlazorTipz.Data
@using BlazorTipz.ViewModels
@using BlazorTipz.ViewModels.Team
@using BlazorTipz.ViewModels.User
@using BlazorTipz.ViewModels.Suggestion
@using Microsoft.AspNetCore.Mvc
@using Radzen

<!--Injects from program-->
@inject ILocalStorageService _localStorage
@inject NavigationManager NavigationManager
@inject IUserManager _userManager
@inject ITeamManager _teamManager
@inject ISuggestionManager _suggestionManager
@inject DialogService DialogService

<AuthorizeView>
    <Authorized>
        <h1 class="center">Team @currentTeam.name</h1>
        <!--Team Suggestions-->
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="false" 
        FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@teamSug" TItem="SuggViewmodel" ColumnWidth="300px"
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
                <RadzenDataGridColumn TItem="SuggViewmodel" Property="Title" Filterable="false" Title="Tittel" Width="70px" TextAlign="TextAlign.Center" />
                
                <RadzenDataGridColumn TItem="SuggViewmodel" Property="CreatorName" Title="Oppretter" Width="140px" TextAlign="TextAlign.Center"/>
                <RadzenDataGridColumn TItem="SuggViewmodel" Property="StartDate" Title="Start Dato" Width="140px" TextAlign="TextAlign.Center"/>
                <RadzenDataGridColumn TItem="SuggViewmodel" Property="Status" Title="Status" Width="140px" TextAlign="TextAlign.Center"/> 
                <RadzenDataGridColumn TItem="SuggViewmodel" Property="AnsvarligName" Title="Ansvarlig" Width="140px" TextAlign="TextAlign.Center" />
                <RadzenDataGridColumn Width="160px" TItem="SuggViewmodel" TextAlign="TextAlign.Center" Title="Mer">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="info" Class="m-1"
                                      Text="Vis mer" Click=@(() => ShowCloseableFromOverlayDialog(data.Title, data.CreatorName, data.Description)) />
                    </Template>
                </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
     </Authorized>
</AuthorizeView>
@code{
    async Task ShowCloseableFromOverlayDialog(string title, string creator, string description)
    {
        await DialogService.OpenAsync($"{title} by {creator}", ds =>
    @<div>


                    <p> @description </p>

    </div>, new DialogOptions() { CloseDialogOnOverlayClick = true });
    }
}


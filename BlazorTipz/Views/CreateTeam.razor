<!--Injects from program-->
@page "/createTeam"

<!--Accesses classes defined here-->
@using BlazorTipz.ViewModels
@using BlazorTipz.ViewModels.Team
@using BlazorTipz.ViewModels.User
@using Microsoft.AspNetCore.Mvc
@using Radzen

<!--Injects from program-->
@inject NavigationManager _navigationManager
@inject IUserManager _userManager
@inject ITeamManager _teamManager


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

<PageTitle>Create Team</PageTitle>

<AuthorizeView Roles="Admin" Context="someContext">
    <Authorized>
        <h1 class="center">Fill in the form</h1>
        <p class="d-flex justify-content-center">to create a new team!</p>
        <div class="container my-4">
            <div class="row">
                <div class="col-lg-6 offset-lg-3">
                    <RadzenTemplateForm TItem="TeamViewmodel" Data=@teamDto Submit=RegisterTeam>
                        <div class="row mb-5">
                            <div class="col-md-4" style="align-self: center;">
                                <RadzenLabel Text="Team Name" />
                            </div>
                            <div class="col">
                                <RadzenTextBox style="display: block" Name="team" @bind-Value=@teamDto.name Class="w-100" />
                                <RadzenLengthValidator Component="team" Min="3" Text="Team name should be alteast 3 characters long" Popup=@popup Style="position: absolute" />
                            </div>
                        </div>
                        <div class="row mb-5">
                            <div class="col-md-4" style="align-self: center;">
                                <RadzenLabel Text="Set Team Leader" />
                            </div>
                            <div class="col">
                                <RadzenDropDownDataGrid @bind-Value=@teamDto.leader FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowVirtualization="true"
                                                        AllowFiltering="false" AllowClear="true" Data=@people TextProperty="employmentId" Placeholder="ID" ValueProperty="employmentId" Class="w-100">
                                    <Columns>
                                        <RadzenDropDownDataGridColumn Property="employmentId" Title="User ID" />
                                        <RadzenDropDownDataGridColumn Property="name" Title="Firstname" />
                                    </Columns>

                                </RadzenDropDownDataGrid>
                            </div>
                        </div>
                        <div class="center">
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
                        </div>
                    </RadzenTemplateForm>
                </div>
            </div>
        </div>
        <h1 class="center">Fill in the form</h1>
        <p class="d-flex justify-content-center">to add a new team member! ps: to be optimized</p>
        <div class="container my-4">
            <div class="row">
                <div class="col-lg-6 offset-lg-3">
                    <RadzenTemplateForm TItem="UserViewmodel" Data=@userDto Submit=AddTeamMember>
                        <div class="row mb-5">
                            <div class="col-md-4" style="align-self: center;">
                                <RadzenLabel Text="Team Name" />
                            </div>
                            <div class="col">
                                <RadzenDropDownDataGrid @bind-Value=@userDto.teamId FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowVirtualization="true"
                                                        AllowFiltering="true" AllowClear="true" Data=@teams TextProperty="name" Placeholder="Team" ValueProperty="id" Class="w-100">
                                    <Columns>
                                        <RadzenDropDownDataGridColumn Property="id" Title="Team ID" />
                                        <RadzenDropDownDataGridColumn Property="name" Title="Team Name" />
                                    </Columns>

                                </RadzenDropDownDataGrid>
                            </div>
                        </div>

                        <div class="row mb-5">
                            <div class="col-md-4" style="align-self: center;">
                                <RadzenLabel Text="Set member employee ID" />
                            </div>
                            <div class="col">
                                <RadzenDropDownDataGrid @bind-Value=@userDto.employmentId FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowVirtualization="true"
                                                        AllowFiltering="false" AllowClear="true" Data=@people TextProperty="name" Placeholder="ID" ValueProperty="employmentId" Class="w-100">
                                    <Columns>
                                        <RadzenDropDownDataGridColumn Property="employmentId" Title="User ID" />
                                        <RadzenDropDownDataGridColumn Property="name" Title="Name" />
                                    </Columns>

                                </RadzenDropDownDataGrid>
                            </div>
                        </div>
                        <div class="center">
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
                        </div>
                        <div class="center">
                            <h1>@Checker</h1>
                        </div>
                    </RadzenTemplateForm>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>
<AuthorizeView Roles="TeamLeader" Context="someContext">
    <Authorized>
        <h1 class="center">Fill in the form</h1>
        <p class="d-flex justify-content-center">to add a new team member to @team!</p>
        <div class="container my-4">
            <div class="row">
                <div class="col-lg-6 offset-lg-3">
                    <RadzenTemplateForm TItem="UserViewmodel" Data=@userDto Submit=AddTeamMember>

                        <div class="row mb-5">
                            <div class="col-md-4" style="align-self: center;">
                                <RadzenLabel Text="Set member employee ID" />
                            </div>
                            <div class="col">
                                <RadzenDropDownDataGrid @bind-Value=@userDto.employmentId FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowVirtualization="true"
                                                        AllowFiltering="false" AllowClear="true" Data=@people TextProperty="employmentId" Placeholder="ID" ValueProperty="employmentId" Class="w-100">
                                    <Columns>
                                        <RadzenDropDownDataGridColumn Property="employmentId" Title="User ID" />
                                        <RadzenDropDownDataGridColumn Property="name" Title="Firstname" />
                                    </Columns>

                                </RadzenDropDownDataGrid>
                            </div>
                        </div>
                        <div class="center">
                            <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
                        </div>
                        <div class="center">
                            <h1>@Checker</h1>
                        </div>
                    </RadzenTemplateForm>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>
<AuthorizeView Roles="User">
    <Authorized>
        <h1 class="center">You are not Authorized to view this page</h1>
    </Authorized>
</AuthorizeView>

@code {
    bool popup;
    bool isLoading = false;
    public string Checker { get; set; }
    public string team { get; set; }

    UserViewmodel CUser;
    TeamViewmodel Cteam;
    UserViewmodel userDto = new UserViewmodel();
    TeamViewmodel teamDto = new TeamViewmodel();
    List<UserViewmodel> people = new List<UserViewmodel>();
    List<TeamViewmodel> teams = new List<TeamViewmodel>();

    //checks if there is a current user
    protected override async Task OnInitializedAsync()
    {
        var CurrentUser = _userManager.getCurrentUser();
        people = await _userManager.updateUsersList();
        teams = await _teamManager.updateTeamsList();
        if (CurrentUser != null)
        {
            CUser = CurrentUser;
            Cteam = await _teamManager.getTeam(CUser.teamId);
            team = Cteam.name;
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }

    }

    //Registeres Team and connects a user as Team Leader
    public async Task<ActionResult<TeamViewmodel>> RegisterTeam(TeamViewmodel request)
    {
        TeamViewmodel ret;
        string err;
        (ret, err) = await _teamManager.createTeam(request);
        if (err != null) { Checker = err; return null; }
        else { Checker = "Team created"; return ret; }
    }

    //Registeres a member to a selected team
    public async Task AddTeamMember(UserViewmodel request)
    {

        if (request.teamId == null)
        {
            await _userManager.updateUserTeam(request.employmentId, CUser.teamId);
            Checker = "User added to team";
        }
        else
        {
            await _userManager.updateUserTeam(request.employmentId, request.teamId);
            Checker = "User added to team";
        }

    }
}